:def hoo \x -> return $ ":!stack hoogle \"" ++ x ++ "\""
:def doc \x -> return $ ":!stack hoogle -- -i \"" ++ x ++ "\""


:set prompt "\ESC[1;34m%s \ESC[0;34mÎ» \ESC[m"
:set prompt-cont "\SOH\ESC[1;34m\STX |\SOH\ESC[0m\STX "

:set +m
:set +t
:set -fprint-evld-with-show
:set stop :list

:set -XOverloadedStrings

:def pretty \_ -> return $ "import Text.Show.Pretty (ppShow)\nimport Language.Haskell.HsColour\nimport Language.Haskell.HsColour.Colourise\n let colorPrint = putStrLn . hscolour TTY defaultColourPrefs False False \"\" False . ppShow\n :set -interactive-print colorPrint"

:l app/Main.hs
